let checkoutPrevious,discardChanges,installDependencies,createTask,transitionTo,initial,pending,success;_ab9‍.x([["runRestoreWorkspace",()=>runRestoreWorkspace],["default",()=>_ab9‍.o]]);_ab9‍.w("../git/git",[["checkoutPrevious",["checkoutPrevious"],function(v){checkoutPrevious=v}],["discardChanges",["discardChanges"],function(v){discardChanges=v}]]);_ab9‍.w("../lib/installDependencies",[["default",["installDependencies"],function(v){installDependencies=v}]]);_ab9‍.w("../lib/tasks",[["createTask",["createTask"],function(v){createTask=v}],["transitionTo",["transitionTo"],function(v){transitionTo=v}]]);_ab9‍.w("../ui/tasks/restoreWorkspace",[["initial",["initial"],function(v){initial=v}],["pending",["pending"],function(v){pending=v}],["success",["success"],function(v){success=v}]]);




       const runRestoreWorkspace = async () => {
  await discardChanges(); // we need a clean state before checkout
  await checkoutPrevious();
  await installDependencies();
  await discardChanges(); // drop lockfile changes
};

_ab9‍.d(createTask({
  title: initial.title,
  steps: [transitionTo(pending), runRestoreWorkspace, transitionTo(success, true)],
}));
